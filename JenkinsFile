pipeline {
    agent any

    tools {
        jdk 'java17'
        maven 'maven3'  // Ensure 'Maven3' matches the exact name of your Maven installation in Jenkins
    }
    
    environment {
        APP_NAME = 'creating-pipeline'
        RELEASE = '1.0.0'
        IMAGE_NAME = 'javatestimage'
       
    }

    stages {
        stage("Cleanup Workspace") {
            steps {
                cleanWs()
            }
        }
        
        stage("Git Checkout") {
            steps {
                git branch: 'master', url: 'https://github.com/Harish667-hash/BoardgameListingWebApp.git'
            }
        }
        
        stage("Build") {
            steps {
                sh 'mvn clean package'
            }
        }
        stage("Build & Push Docker Image") {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/', 'docker-credentials-id') {
                        def dockerImage = docker.build("${IMAGE_NAME}")
                        def imageRepo = "${IMAGE_NAME}:${BUILD_NUMBER}"
                        def dockerHubUsername = 'harish645' // Replace with your username
                        def fullImageRepo = "${dockerHubUsername}/${imageRepo}"
        
                    // Check if the repository exists, if not create it
                        def repoExists = sh(returnStatus: true, script: "curl -s -f -o /dev/null https://hub.docker.com/repositories/${dockerHubUsername}/${IMAGE_NAME}")
                            if (repoExists != 0) {
                            sh "curl -X POST https://hub.docker.com/repositories/${dockerHubUsername}/${IMAGE_NAME}/"
                        }
        
                        dockerImage.push(fullImageRepo)
                    }
                }
            }
        }






    }
}